{
	"name": "quick-i18n-gen",
	"displayName": "quick-i18n-gen",
	"description": "Extension to quickly create translation keys for string literals",
	"version": "1.0.0",
	"engines": {
		"vscode": "^1.67.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"configuration": {
			"title": "Quick I18n Generation",
			"properties": {
				"quick-i18n-gen.apiProvider": {
					"type": "string",
					"description": "API Provider to use for translation",
					"default": "DeepL",
					"enum": [
						"DeepL"
					],
					"enumDescriptions": [
						"(DeepL Translation API)[https://www.deepl.com/en/docs-api/]"
					]
				},
				"quick-i18n-gen.deepl.apiKey": {
					"type": "string",
					"description": "API Key for DeepL Translation API",
					"markdownDescription": "You can get an API key [here](https://www.deepl.com/en/account.html#api_key)."
				},
				"quick-i18n-gen.deepl.sourceLanguage": {
					"type": "string",
					"description": "Source language for translation",
					"default": "en",
					"enum": [
						"en",
						"pt",
						"bg",
						"cs",
						"da",
						"de",
						"el",
						"es",
						"et",
						"fi",
						"fr",
						"hu",
						"id",
						"it",
						"ja",
						"lt",
						"lv",
						"nl",
						"pl",
						"ro",
						"ru",
						"sk",
						"sl",
						"sv",
						"tr",
						"zh"
					],
					"scope": "resource"
				},
				"quick-i18n-gen.deepl.targetLanguages": {
					"type": "array",
					"description": "Target languages for translation",
					"items": {
						"type": "string",
						"enum": [
							"en-GB",
							"en-US",
							"pt-BR",
							"pt-PT",
							"bg",
							"cs",
							"da",
							"de",
							"el",
							"es",
							"et",
							"fi",
							"fr",
							"hu",
							"id",
							"it",
							"ja",
							"lt",
							"lv",
							"nl",
							"pl",
							"ro",
							"ru",
							"sk",
							"sl",
							"sv",
							"tr",
							"zh"
						]
					},
					"scope": "resource"
				},
				"quick-i18n-gen.translationFilePath": {
					"type": "string",
					"description": "File path to the translation file",
					"markdownDescription": "The file path should be relative to the workspace root.",
					"scope": "resource"
				},
				"quick-i18n-gen.translationFileType": {
					"type": "string",
					"description": "File type of the translation file",
					"default": "CSV",
					"enum": [
						"CSV"
					],
					"enumDescriptions": [
						"Comma Separated Values"
					]
				},
				"quick-i18n-gen.csv.separator": {
					"type": "string",
					"description": "separator for CSV file",
					"default": ",",
					"markdownDescription": "The separator should be a single character.",
					"scope": "resource"
				},
				"quick-i18n-gen.csv.quote": {
					"type": "string",
					"description": "quote for CSV file",
					"default": "\"",
					"markdownDescription": "The quote should be a single character.",
					"scope": "resource"
				},
				"quick-i18n-gen.csv.escape": {
					"type": "string",
					"description": "escape for CSV file",
					"default": "\\",
					"markdownDescription": "The escape should be a single character.",
					"scope": "resource"
				},
				"quick-i18n-gen.csv.header": {
					"type": "boolean",
					"description": "Use header for CSV file",
					"default": true,
					"scope": "resource"
				},
				"quick-i18n-gen.allowDuplicates": {
					"type": "boolean",
					"description": "Allow duplicate translations in CSV file",
					"default": true,
					"scope": "resource"
				},
				"quick-i18n-gen.replacementString": {
					"type": "string",
					"description": "String that will replace the original string",
					"default": "I18n.{token}",
					"markdownDescription": "The replacement string should contain the token {token}.",
					"scope": "resource"
				}
			}
		},
		"commands": [
			{
				"command": "quick-i18n-gen.registerApi",
				"title": "Register Translation API",
				"category": "Quick I18n"
			},
			{
				"command": "quick-i18n-gen.selectTranslationFile",
				"title": "Select Translation File",
				"category": "Quick I18n"
			},
			{
				"command": "quick-i18n-gen.setTranslationFile",
				"title": "Set as Translation File",
				"category": "Quick I18n"
			},
			{
				"command": "quick-i18n-gen.translateText",
				"title": "Translates text",
				"category": "Quick I18n"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "quick-i18n-gen.setTranslationFile",
					"when": "false"
				}
			],
			"explorer/context": [
				{
					"command": "quick-i18n-gen.setTranslationFile",
					"when": "resourceFilename =~ /.+\\.csv/",
					"group": "2_workspace"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "webpack",
		"watch": "webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"compile-tests": "tsc -p . --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"pretest": "npm run compile-tests && npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/vscode": "^1.67.0",
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.1.1",
		"@types/node": "14.x",
		"@typescript-eslint/eslint-plugin": "^5.21.0",
		"@typescript-eslint/parser": "^5.21.0",
		"eslint": "^8.14.0",
		"glob": "^8.0.1",
		"mocha": "^9.2.2",
		"typescript": "^4.6.4",
		"ts-loader": "^9.2.8",
		"webpack": "^5.70.0",
		"webpack-cli": "^4.9.2",
		"@vscode/test-electron": "^2.1.3"
	},
	"dependencies": {
		"deepl-node": "^1.3.1"
	}
}